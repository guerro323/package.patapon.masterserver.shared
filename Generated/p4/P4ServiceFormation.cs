// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Messages/p4/p4_service_formation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace P4TLB.MasterServer {

  /// <summary>Holder for reflection information generated from Messages/p4/p4_service_formation.proto</summary>
  public static partial class P4ServiceFormationReflection {

    #region Descriptor
    /// <summary>File descriptor for Messages/p4/p4_service_formation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static P4ServiceFormationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZNZXNzYWdlcy9wNC9wNF9zZXJ2aWNlX2Zvcm1hdGlvbi5wcm90bxISUDRU",
            "TEIuTWFzdGVyU2VydmVyIjoKE0RhdGFPZlBsYXllclJlcXVlc3QSDwoHdXNl",
            "cl9pZBgBIAEoBBISCgp1c2VyX2xvZ2luGAIgASgJIhcKBlA0QXJteRINCgV1",
            "bml0cxgBIAMoBCJsChNQNEFybXlGb3JtYXRpb25Sb290EgoKAmlkGAEgASgE",
            "EioKBmFybWllcxgCIAMoCzIaLlA0VExCLk1hc3RlclNlcnZlci5QNEFybXkS",
            "DAoEbmFtZRgDIAEoCRIPCgd1c2VyX2lkGAogASgEIu8BChpHZXRGb3JtYXRp",
            "b25PZlBsYXllclJlc3VsdBJHCgVlcnJvchgBIAEoDjI4LlA0VExCLk1hc3Rl",
            "clNlcnZlci5HZXRGb3JtYXRpb25PZlBsYXllclJlc3VsdC5FcnJvckNvZGUS",
            "NwoGcmVzdWx0GAIgASgLMicuUDRUTEIuTWFzdGVyU2VydmVyLlA0QXJteUZv",
            "cm1hdGlvblJvb3QiTwoJRXJyb3JDb2RlEgsKB1N1Y2Nlc3MQABISCg5JbnZh",
            "bGlkUmVxdWVzdBABEhAKDFVuYXV0aG9yaXplZBACEg8KC05vRm9ybWF0aW9u",
            "EAMyiQEKFlA0QXJteUZvcm1hdGlvblNlcnZpY2USbwoUR2V0Rm9ybWF0aW9u",
            "T2ZQbGF5ZXISJy5QNFRMQi5NYXN0ZXJTZXJ2ZXIuRGF0YU9mUGxheWVyUmVx",
            "dWVzdBouLlA0VExCLk1hc3RlclNlcnZlci5HZXRGb3JtYXRpb25PZlBsYXll",
            "clJlc3VsdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.DataOfPlayerRequest), global::P4TLB.MasterServer.DataOfPlayerRequest.Parser, new[]{ "UserId", "UserLogin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.P4Army), global::P4TLB.MasterServer.P4Army.Parser, new[]{ "Units" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.P4ArmyFormationRoot), global::P4TLB.MasterServer.P4ArmyFormationRoot.Parser, new[]{ "Id", "Armies", "Name", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.GetFormationOfPlayerResult), global::P4TLB.MasterServer.GetFormationOfPlayerResult.Parser, new[]{ "Error", "Result" }, null, new[]{ typeof(global::P4TLB.MasterServer.GetFormationOfPlayerResult.Types.ErrorCode) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DataOfPlayerRequest : pb::IMessage<DataOfPlayerRequest> {
    private static readonly pb::MessageParser<DataOfPlayerRequest> _parser = new pb::MessageParser<DataOfPlayerRequest>(() => new DataOfPlayerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataOfPlayerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceFormationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOfPlayerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOfPlayerRequest(DataOfPlayerRequest other) : this() {
      userId_ = other.userId_;
      userLogin_ = other.userLogin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOfPlayerRequest Clone() {
      return new DataOfPlayerRequest(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    /// <summary>
    /// The selected user id, if it's set a 0, 'user_login' will be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "user_login" field.</summary>
    public const int UserLoginFieldNumber = 2;
    private string userLogin_ = "";
    /// <summary>
    /// The selected user login, this path is only used if 'user_id' is set to 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserLogin {
      get { return userLogin_; }
      set {
        userLogin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataOfPlayerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataOfPlayerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserLogin != other.UserLogin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (UserLogin.Length != 0) hash ^= UserLogin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (UserLogin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserLogin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (UserLogin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserLogin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataOfPlayerRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.UserLogin.Length != 0) {
        UserLogin = other.UserLogin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            UserLogin = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class P4Army : pb::IMessage<P4Army> {
    private static readonly pb::MessageParser<P4Army> _parser = new pb::MessageParser<P4Army>(() => new P4Army());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<P4Army> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceFormationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4Army() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4Army(P4Army other) : this() {
      units_ = other.units_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4Army Clone() {
      return new P4Army(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_units_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> units_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Units {
      get { return units_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as P4Army);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(P4Army other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!units_.Equals(other.units_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= units_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      units_.WriteTo(output, _repeated_units_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += units_.CalculateSize(_repeated_units_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(P4Army other) {
      if (other == null) {
        return;
      }
      units_.Add(other.units_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            units_.AddEntriesFrom(input, _repeated_units_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class P4ArmyFormationRoot : pb::IMessage<P4ArmyFormationRoot> {
    private static readonly pb::MessageParser<P4ArmyFormationRoot> _parser = new pb::MessageParser<P4ArmyFormationRoot>(() => new P4ArmyFormationRoot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<P4ArmyFormationRoot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceFormationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4ArmyFormationRoot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4ArmyFormationRoot(P4ArmyFormationRoot other) : this() {
      id_ = other.id_;
      armies_ = other.armies_.Clone();
      name_ = other.name_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4ArmyFormationRoot Clone() {
      return new P4ArmyFormationRoot(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "armies" field.</summary>
    public const int ArmiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::P4TLB.MasterServer.P4Army> _repeated_armies_codec
        = pb::FieldCodec.ForMessage(18, global::P4TLB.MasterServer.P4Army.Parser);
    private readonly pbc::RepeatedField<global::P4TLB.MasterServer.P4Army> armies_ = new pbc::RepeatedField<global::P4TLB.MasterServer.P4Army>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::P4TLB.MasterServer.P4Army> Armies {
      get { return armies_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 10;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as P4ArmyFormationRoot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(P4ArmyFormationRoot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!armies_.Equals(other.armies_)) return false;
      if (Name != other.Name) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      hash ^= armies_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      armies_.WriteTo(output, _repeated_armies_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      size += armies_.CalculateSize(_repeated_armies_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(P4ArmyFormationRoot other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      armies_.Add(other.armies_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 18: {
            armies_.AddEntriesFrom(input, _repeated_armies_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 80: {
            UserId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetFormationOfPlayerResult : pb::IMessage<GetFormationOfPlayerResult> {
    private static readonly pb::MessageParser<GetFormationOfPlayerResult> _parser = new pb::MessageParser<GetFormationOfPlayerResult>(() => new GetFormationOfPlayerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFormationOfPlayerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceFormationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFormationOfPlayerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFormationOfPlayerResult(GetFormationOfPlayerResult other) : this() {
      error_ = other.error_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFormationOfPlayerResult Clone() {
      return new GetFormationOfPlayerResult(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::P4TLB.MasterServer.GetFormationOfPlayerResult.Types.ErrorCode error_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::P4TLB.MasterServer.GetFormationOfPlayerResult.Types.ErrorCode Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::P4TLB.MasterServer.P4ArmyFormationRoot result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::P4TLB.MasterServer.P4ArmyFormationRoot Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFormationOfPlayerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFormationOfPlayerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != 0) hash ^= Error.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFormationOfPlayerResult other) {
      if (other == null) {
        return;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::P4TLB.MasterServer.P4ArmyFormationRoot();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Error = (global::P4TLB.MasterServer.GetFormationOfPlayerResult.Types.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::P4TLB.MasterServer.P4ArmyFormationRoot();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetFormationOfPlayerResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ErrorCode {
        [pbr::OriginalName("Success")] Success = 0,
        [pbr::OriginalName("InvalidRequest")] InvalidRequest = 1,
        [pbr::OriginalName("Unauthorized")] Unauthorized = 2,
        [pbr::OriginalName("NoFormation")] NoFormation = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
