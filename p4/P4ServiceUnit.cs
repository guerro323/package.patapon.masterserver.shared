// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Messages/p4/p4_service_unit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace P4TLB.MasterServer {

  /// <summary>Holder for reflection information generated from Messages/p4/p4_service_unit.proto</summary>
  public static partial class P4ServiceUnitReflection {

    #region Descriptor
    /// <summary>File descriptor for Messages/p4/p4_service_unit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static P4ServiceUnitReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFNZXNzYWdlcy9wNC9wNF9zZXJ2aWNlX3VuaXQucHJvdG8SElA0VExCLk1h",
            "c3RlclNlcnZlciI5CiFVbml0U2VydmljZUdldFBlbmRpbmdFdmVudFJlcXVl",
            "c3QSFAoMY2xpZW50X3Rva2VuGAEgASgJIo8BCiJVbml0U2VydmljZUdldFBl",
            "bmRpbmdFdmVudFJlc3BvbnNlEk0KBXVuaXRzGAEgAygLMj4uUDRUTEIuTWFz",
            "dGVyU2VydmVyLlVuaXRTZXJ2aWNlR2V0UGVuZGluZ0V2ZW50UmVzcG9uc2Uu",
            "UlVuaXRJZBoaCgdSVW5pdElkEg8KB3VuaXRfaWQYASABKAQiJAoSQ2hlY2tF",
            "eGlzdHNSZXF1ZXN0Eg4KBnVuaXRJZBgBIAEoBCIlChNDaGVja0V4aXN0c1Jl",
            "c3BvbnNlEg4KBmV4aXN0cxgBIAEoCCI6CgpQNFVuaXREYXRhEgoKAmlkGAEg",
            "ASgEEg8KB3VzZXJfaWQYAiABKAQSDwoHc2F2ZV9pZBgDIAEoBCIkChJHZXRV",
            "bml0RGF0YVJlcXVlc3QSDgoGdW5pdElkGAEgASgEIkMKE0dldFVuaXREYXRh",
            "UmVzcG9uc2USLAoEZGF0YRgBIAEoCzIeLlA0VExCLk1hc3RlclNlcnZlci5Q",
            "NFVuaXREYXRhMtICCg1QNFVuaXRTZXJ2aWNlEoEBChBHZXRQZW5kaW5nRXZl",
            "bnRzEjUuUDRUTEIuTWFzdGVyU2VydmVyLlVuaXRTZXJ2aWNlR2V0UGVuZGlu",
            "Z0V2ZW50UmVxdWVzdBo2LlA0VExCLk1hc3RlclNlcnZlci5Vbml0U2Vydmlj",
            "ZUdldFBlbmRpbmdFdmVudFJlc3BvbnNlEl0KClVuaXRFeGlzdHMSJi5QNFRM",
            "Qi5NYXN0ZXJTZXJ2ZXIuQ2hlY2tFeGlzdHNSZXF1ZXN0GicuUDRUTEIuTWFz",
            "dGVyU2VydmVyLkNoZWNrRXhpc3RzUmVzcG9uc2USXgoLR2V0VW5pdERhdGES",
            "Ji5QNFRMQi5NYXN0ZXJTZXJ2ZXIuR2V0VW5pdERhdGFSZXF1ZXN0GicuUDRU",
            "TEIuTWFzdGVyU2VydmVyLkdldFVuaXREYXRhUmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.UnitServiceGetPendingEventRequest), global::P4TLB.MasterServer.UnitServiceGetPendingEventRequest.Parser, new[]{ "ClientToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse), global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Parser, new[]{ "Units" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Types.RUnitId), global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Types.RUnitId.Parser, new[]{ "UnitId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.CheckExistsRequest), global::P4TLB.MasterServer.CheckExistsRequest.Parser, new[]{ "UnitId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.CheckExistsResponse), global::P4TLB.MasterServer.CheckExistsResponse.Parser, new[]{ "Exists" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.P4UnitData), global::P4TLB.MasterServer.P4UnitData.Parser, new[]{ "Id", "UserId", "SaveId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.GetUnitDataRequest), global::P4TLB.MasterServer.GetUnitDataRequest.Parser, new[]{ "UnitId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::P4TLB.MasterServer.GetUnitDataResponse), global::P4TLB.MasterServer.GetUnitDataResponse.Parser, new[]{ "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UnitServiceGetPendingEventRequest : pb::IMessage<UnitServiceGetPendingEventRequest> {
    private static readonly pb::MessageParser<UnitServiceGetPendingEventRequest> _parser = new pb::MessageParser<UnitServiceGetPendingEventRequest>(() => new UnitServiceGetPendingEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitServiceGetPendingEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceUnitReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitServiceGetPendingEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitServiceGetPendingEventRequest(UnitServiceGetPendingEventRequest other) : this() {
      clientToken_ = other.clientToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitServiceGetPendingEventRequest Clone() {
      return new UnitServiceGetPendingEventRequest(this);
    }

    /// <summary>Field number for the "client_token" field.</summary>
    public const int ClientTokenFieldNumber = 1;
    private string clientToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientToken {
      get { return clientToken_; }
      set {
        clientToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitServiceGetPendingEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitServiceGetPendingEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientToken != other.ClientToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientToken.Length != 0) hash ^= ClientToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitServiceGetPendingEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClientToken.Length != 0) {
        ClientToken = other.ClientToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnitServiceGetPendingEventResponse : pb::IMessage<UnitServiceGetPendingEventResponse> {
    private static readonly pb::MessageParser<UnitServiceGetPendingEventResponse> _parser = new pb::MessageParser<UnitServiceGetPendingEventResponse>(() => new UnitServiceGetPendingEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitServiceGetPendingEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceUnitReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitServiceGetPendingEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitServiceGetPendingEventResponse(UnitServiceGetPendingEventResponse other) : this() {
      units_ = other.units_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitServiceGetPendingEventResponse Clone() {
      return new UnitServiceGetPendingEventResponse(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Types.RUnitId> _repeated_units_codec
        = pb::FieldCodec.ForMessage(10, global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Types.RUnitId.Parser);
    private readonly pbc::RepeatedField<global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Types.RUnitId> units_ = new pbc::RepeatedField<global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Types.RUnitId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Types.RUnitId> Units {
      get { return units_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitServiceGetPendingEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitServiceGetPendingEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!units_.Equals(other.units_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= units_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      units_.WriteTo(output, _repeated_units_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += units_.CalculateSize(_repeated_units_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitServiceGetPendingEventResponse other) {
      if (other == null) {
        return;
      }
      units_.Add(other.units_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            units_.AddEntriesFrom(input, _repeated_units_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UnitServiceGetPendingEventResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RUnitId : pb::IMessage<RUnitId> {
        private static readonly pb::MessageParser<RUnitId> _parser = new pb::MessageParser<RUnitId>(() => new RUnitId());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RUnitId> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::P4TLB.MasterServer.UnitServiceGetPendingEventResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RUnitId() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RUnitId(RUnitId other) : this() {
          unitId_ = other.unitId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RUnitId Clone() {
          return new RUnitId(this);
        }

        /// <summary>Field number for the "unit_id" field.</summary>
        public const int UnitIdFieldNumber = 1;
        private ulong unitId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong UnitId {
          get { return unitId_; }
          set {
            unitId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RUnitId);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RUnitId other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UnitId != other.UnitId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UnitId != 0UL) hash ^= UnitId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UnitId != 0UL) {
            output.WriteRawTag(8);
            output.WriteUInt64(UnitId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UnitId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnitId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RUnitId other) {
          if (other == null) {
            return;
          }
          if (other.UnitId != 0UL) {
            UnitId = other.UnitId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UnitId = input.ReadUInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CheckExistsRequest : pb::IMessage<CheckExistsRequest> {
    private static readonly pb::MessageParser<CheckExistsRequest> _parser = new pb::MessageParser<CheckExistsRequest>(() => new CheckExistsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckExistsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceUnitReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckExistsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckExistsRequest(CheckExistsRequest other) : this() {
      unitId_ = other.unitId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckExistsRequest Clone() {
      return new CheckExistsRequest(this);
    }

    /// <summary>Field number for the "unitId" field.</summary>
    public const int UnitIdFieldNumber = 1;
    private ulong unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckExistsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckExistsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitId != other.UnitId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnitId != 0UL) hash ^= UnitId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnitId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UnitId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnitId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnitId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckExistsRequest other) {
      if (other == null) {
        return;
      }
      if (other.UnitId != 0UL) {
        UnitId = other.UnitId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnitId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckExistsResponse : pb::IMessage<CheckExistsResponse> {
    private static readonly pb::MessageParser<CheckExistsResponse> _parser = new pb::MessageParser<CheckExistsResponse>(() => new CheckExistsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckExistsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceUnitReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckExistsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckExistsResponse(CheckExistsResponse other) : this() {
      exists_ = other.exists_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckExistsResponse Clone() {
      return new CheckExistsResponse(this);
    }

    /// <summary>Field number for the "exists" field.</summary>
    public const int ExistsFieldNumber = 1;
    private bool exists_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Exists {
      get { return exists_; }
      set {
        exists_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckExistsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckExistsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exists != other.Exists) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exists != false) hash ^= Exists.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Exists != false) {
        output.WriteRawTag(8);
        output.WriteBool(Exists);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exists != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckExistsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Exists != false) {
        Exists = other.Exists;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Exists = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class P4UnitData : pb::IMessage<P4UnitData> {
    private static readonly pb::MessageParser<P4UnitData> _parser = new pb::MessageParser<P4UnitData>(() => new P4UnitData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<P4UnitData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceUnitReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4UnitData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4UnitData(P4UnitData other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      saveId_ = other.saveId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public P4UnitData Clone() {
      return new P4UnitData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "save_id" field.</summary>
    public const int SaveIdFieldNumber = 3;
    private ulong saveId_;
    /// <summary>
    /// saves are not implemented yet, so the 'save_id' will always be 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SaveId {
      get { return saveId_; }
      set {
        saveId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as P4UnitData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(P4UnitData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      if (SaveId != other.SaveId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (SaveId != 0UL) hash ^= SaveId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (UserId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserId);
      }
      if (SaveId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(SaveId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (SaveId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SaveId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(P4UnitData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.SaveId != 0UL) {
        SaveId = other.SaveId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            UserId = input.ReadUInt64();
            break;
          }
          case 24: {
            SaveId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUnitDataRequest : pb::IMessage<GetUnitDataRequest> {
    private static readonly pb::MessageParser<GetUnitDataRequest> _parser = new pb::MessageParser<GetUnitDataRequest>(() => new GetUnitDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUnitDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceUnitReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnitDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnitDataRequest(GetUnitDataRequest other) : this() {
      unitId_ = other.unitId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnitDataRequest Clone() {
      return new GetUnitDataRequest(this);
    }

    /// <summary>Field number for the "unitId" field.</summary>
    public const int UnitIdFieldNumber = 1;
    private ulong unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUnitDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUnitDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitId != other.UnitId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnitId != 0UL) hash ^= UnitId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnitId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UnitId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnitId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnitId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUnitDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.UnitId != 0UL) {
        UnitId = other.UnitId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnitId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUnitDataResponse : pb::IMessage<GetUnitDataResponse> {
    private static readonly pb::MessageParser<GetUnitDataResponse> _parser = new pb::MessageParser<GetUnitDataResponse>(() => new GetUnitDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUnitDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::P4TLB.MasterServer.P4ServiceUnitReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnitDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnitDataResponse(GetUnitDataResponse other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnitDataResponse Clone() {
      return new GetUnitDataResponse(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::P4TLB.MasterServer.P4UnitData data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::P4TLB.MasterServer.P4UnitData Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUnitDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUnitDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUnitDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::P4TLB.MasterServer.P4UnitData();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::P4TLB.MasterServer.P4UnitData();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
