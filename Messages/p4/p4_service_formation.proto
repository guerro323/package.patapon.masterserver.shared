syntax = "proto3";

package P4TLB.MasterServer;

service P4ArmyFormationService {
    rpc GetFormationOfPlayer (DataOfPlayerRequest) returns (GetFormationOfPlayerResult);
}

message DataOfPlayerRequest {
    // The selected user id, if it's set a 0, 'user_login' will be used
    uint64 user_id = 1;
    // The selected user login, this path is only used if 'user_id' is set to 0
    string user_login = 2;
}

message P4Army {
    repeated uint64 units = 1;
}

message P4ArmyFormationRoot {
    uint64 id = 1;

    repeated P4Army armies = 2;
    string name = 3;

    uint64 user_id = 10;
}

message GetFormationOfPlayerResult {
    enum ErrorCode {
        Success = 0;
        InvalidRequest = 1;
        Unauthorized = 2;
        NoFormation = 3;
    }

    ErrorCode error = 1;
    P4ArmyFormationRoot result = 2;
}

/* In P4, units does not possess an army id or formation id.
 * But thanks to that, we are able to do make army presets.
 * Armies are saved with unit ids in it.
 * 
 * IMPORTANT: If an army possess a chef, it should be at the first index.
 *            But it does not mean that the army possess a chef.
 *            It does save a lot of processing time since we know that the chef can only be in the first index...
 *
 * IMPORTANT: Armies should ONLY contains Units Ids.
 */